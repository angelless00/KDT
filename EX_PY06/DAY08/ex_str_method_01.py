#-----------------------------------------------------------------------------------------------
# str 데이터 타입 전용 함수 즉, 메서드 살펴보기 
#-----------------------------------------------------------------------------------------------
msg='Hello 0705'

#[원소/요소 인덱스 찾기 메서드 - find(문자1개 또는 문자열)]
# - 'H'의 인덱스 
idx=msg.find('H')
print(f'H의 인덱스 : {idx}')

# - '7'의 인덱스 
idx=msg.find('7')
print(f'7의 인덱스 : {idx}')


# - llo의 인덱스
idx=msg.find('llo')
print(f'llo의 시작 인덱스 : {idx}')

# - LLO의 인덱스 => 대소문자 일치해야 가능, 존재하지 않으면 -1을 결과로 줌
idx=msg.find('LLO')
print(f'LLO의 시작 인덱스 : {idx}')


#[원소/요소 인덱스 찾기 메서드 - index(문자1개 또는 문자열)]
# 'H'의 인덱스
idx=msg.index('H')
print(f'H의 인덱스 : {idx}')

# # 'h'의 인덱스      =>존재하지 않으면 ERROR
# idx=msg.index('h')
# print(f'h의 인덱스 : {idx}')

if 'h' in msg:              # =>존재성부터 확인후 검색하면 ERROR 없음!
    idx=msg.index('h')
    print(f'h의 인덱스 : {idx}')
else:
    print('h는 존재하지 않습니다.')

#-----------------------------------------------------------------------------------------------
# 문자열에 동일한 문자가 여러개 존재하는 경우
#-----------------------------------------------------------------------------------------------
msg='Good Luck Good'

# - 'o'의 인덱스 찾기 => 첫번째 'o' 인덱스
idx=msg.find('o')
print(f'o의 인덱스 : {idx}')

# - 'o'의 인덱스 찾기 => 두번째 'o' 인덱스
idx=msg.find('o',idx+1)
print(f'o의 두번째 인덱스 : {idx}')

# - 'o'의 인덱스 찾기 => 세번째 'o' 인덱스
idx=msg.find('o',idx+1)
print(f'o의 세번째 인덱스 : {idx}')

# - 'o'의 인덱스 찾기 => 네번째 'o' 인덱스
idx=msg.find('o',idx+1)
print(f'o의 네번째 인덱스 : {idx}')


cnt=msg.count('o')
idx=-1
for n in range(cnt):
    idx=msg.find('o',idx+1)
    print(f'{n+1}번쨰 o의 인덱스 : {idx}')

#-----------------------------------------------------------------------------------------------
# 문자열의 뒷부분부터 찾는 메서드 => rfind(),rindex()
#-----------------------------------------------------------------------------------------------
msg='Happy'

# - 'p'인덱스 찾기
idx=msg.rfind('p')
print(f'p의 인덱스 : {idx}')

# - 두번째 'p'인덱스 찾기
idx=msg.rfind('p',0,idx)
print(f'p의 인덱스 : {idx}')

# - 파일명에서 확장자 찾기
files=['hello.txt','2024년상반기경제분석.doc','kakao_1234452423.jpg']
for m in files:
    dot=m.find('.')
    print(f'파일의 확장자 : {m[dot+1:]}')



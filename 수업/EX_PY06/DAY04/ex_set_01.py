#------------------------------------------------------------------------------------------------
# Set 자료형 살펴보기
# - 여러가지 종류의 여러 개 데이터를 저장
# - 단! 중복 안됨!!
# - 컬렉션 타입의 저장시 Tuple 가능
# - 형태 {data1,data2,...,data n}
#------------------------------------------------------------------------------------------------ 
## [Set 생성]----------------------------------------------------------------
data=[]  # 비어있는 리스트
data=()  # 비어잇는 튜플
data={}  # 비어있는 딕셔너리
data=set()  #비어있는 집합

print(f'data의 타입 : {type(data)}, 원소/요소의 갯수 : {len(data)}, 데이터 : {data}')

# 여러개의 데이터 저장한 set
data={10, 30,20,-9,10,30,10,10,10}
print(f'data의 타입 : {type(data)}, 원소/요소의 갯수 : {len(data)}, 데이터 : {data}')

data={9.34,"apple",10,True,"10"}
print(f'data의 타입 : {type(data)}, 원소/요소의 갯수 : {len(data)}, 데이터 : {data}')

#data={1,2,3,[1,2,3]}  => list는 불가능!
#data={1,2,3,(1,2,3)}
#data={1,2,3,(1)} #=> (1)은 그냥 정수 1이랑 중복!
#data={1,2,3,(1,)} #=> 1은 튜플이라 중복x
#data={1,2,3,(1,)[0]} #=> 튜플의 0번쨰 원소라 그냥 정수1
#data={1,2,3,{1:100}} #=> 딕셔너리도 변경가능하므로 원소로불가능

# set() 내장함수
data={1,2,3} #== set([1,2,3])
data=set() # Empty Set
data=set({1,2,3})

# 다양한 타입을 Set으로 형변환
data=set([1,2,1,2,3])
data=set("Good") #=> 가능!
data=set({"이름":"홍길동","age":12})
#           =>{'age', '이름'} << 키만 들어감!
print(data)

